/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-09-12 07:57:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reporter.profile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>LOGIN</title>\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  \t\r\n");
      out.write("  </script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".container {\r\n");
      out.write("\twidth: 1024px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-offset-3 col-sm-6\">\r\n");
      out.write("\t\t\t\t<form class=\"form-horizontal well\" method=\"post\" action=\"/reporter/profile/loginReporter.jsp\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<h1 class=\"text-center\">LOGIN</h1>\r\n");
      out.write("\t\t\t\t\t\t");

	                	final String SUCCESS_CODE_DONE = "1";
	                	final String SUCCESS_CODE_SEND_MAIL = "2";
	                	final String FAIL_CODE_ALL = "1";
	                	final String FAIL_CODE_PASSWORD = "2";
	                	String successCode = request.getParameter("success");
	                	String failCode = request.getParameter("fail");
		                
      out.write("\r\n");
      out.write("\t\t                ");
if(SUCCESS_CODE_DONE.equals(successCode)) {
      out.write("\r\n");
      out.write("\t\t                \t<div class=\"alert alert-info\">\r\n");
      out.write("\t\t                \t\t<strong>완료</strong> 성공적으로 로그아웃되었습니다. 로그아웃을 생활화!!\r\n");
      out.write("\t\t                \t</div>\r\n");
      out.write("\t\t                ");
}
      out.write("\r\n");
      out.write("\t\t                ");
if(SUCCESS_CODE_SEND_MAIL.equals(successCode)) {
      out.write("\r\n");
      out.write("\t\t                \t<div class=\"alert alert-info\">\r\n");
      out.write("\t\t                \t\t<strong>성공</strong> 성공적으로 이메일이 발송되었습니다. 이메일 확인후 임시비밀번호로 로그인하여 주세요\r\n");
      out.write("\t\t                \t</div>\r\n");
      out.write("\t\t                ");
}
      out.write("\r\n");
      out.write("\t\t                ");
if(FAIL_CODE_ALL.equals(failCode)) {
      out.write("\r\n");
      out.write("\t\t                \t<div class=\"alert alert-danger\">\r\n");
      out.write("\t\t                \t\t<strong>실패</strong> 아이디와 비밀번호를 확인하여 주십시오!\r\n");
      out.write("\t\t                \t</div>\r\n");
      out.write("\t\t                ");
}
      out.write("\r\n");
      out.write("\t\t                ");
if(FAIL_CODE_PASSWORD.equals(failCode)) {
      out.write("\r\n");
      out.write("\t\t                \t<div class=\"alert alert-danger\">\r\n");
      out.write("\t\t                \t\t<strong>실패</strong> 비밀번호가 틀렸습니다. 비밀번호를 확인하여 주십시오\r\n");
      out.write("\t\t                \t</div>\r\n");
      out.write("\t\t                ");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");

					 		if(request.getParameter("deny") != null) {
					 	
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t \t\t<div class=\"alert alert-danger\">\r\n");
      out.write("\t\t\t\t\t \t\t\t<strong>오류</strong> 로그인이 필요합니다.\r\n");
      out.write("\t\t\t\t\t \t\t</div>\t\r\n");
      out.write("\t\t\t\t\t \t");
	
					 		}
					 	
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("           \t\t\t<div class=\"form-group\">\r\n");
      out.write("           \t\t\t\t<div class=\"col-sm-2\">\r\n");
      out.write("           \t\t\t\t</div>\r\n");
      out.write("               \t\t\t\t<div class=\"col-sm-8\">\r\n");
      out.write("               \t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("               \t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\r\n");
      out.write("                   \t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" placeholder=\"ID\"/>\r\n");
      out.write("               \t\t\t\t\t</div>\r\n");
      out.write("               \t\t\t\t</div>\r\n");
      out.write("           \t\t\t</div>\r\n");
      out.write("              \t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-2\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-sm-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"pass\" name=\"pass\" placeholder=\"Password\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t \t\t</div>\r\n");
      out.write("\t\t\t \t\t<div class=\"form-group\"> \r\n");
      out.write("    \t\t\t\t\t<div class=\"col-sm-offset-2 col-sm-10\">\r\n");
      out.write("      \t\t\t\t\t\t<div class=\"checkbox\">\r\n");
      out.write("       \t\t\t\t\t\t\t <label><input type=\"checkbox\">저장</label>\r\n");
      out.write("      \t\t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("  \t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group text-right\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t\t<a class=\"btn btn-warning\" href=\"findPassword.jsp\">PW찾기</a>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-danger\" type=\"submit\" id=\"login-btn\" >Login</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t \t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("         </div>\r\n");
      out.write("\t</div>\t\t\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tdocument.getElementById(\"login-btn\").addEventListener('click',function(event){\r\n");
      out.write("\t\tvar id = document.getElementById(\"id\").value;\r\n");
      out.write("\t\tvar pass = document.getElementById(\"pass\").value;\r\n");
      out.write("\t\tif(id == '' || pass == '') {\r\n");
      out.write("\t\t\talert(\"아이디와 비밀번호를 확인하여주세요\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"id\").value = \"\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"pass\").value = \"\";\r\n");
      out.write("\t\t} \r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
