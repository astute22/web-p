/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-09-13 05:27:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.profile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.co.jtimes.profile.common.vo.UserVo;

public final class userLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/commons/clientNavi.jsp", Long.valueOf(1505274185250L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.co.jtimes.profile.common.vo.UserVo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.container {\r\n");
      out.write("\t\twidth: 1024px;\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	pageContext.setAttribute("cp", "log");
	String returnURL = request.getParameter("returnURL");
	if(returnURL == null) {
		returnURL = "";
	}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("  ");

	String cp = (String) pageContext.getAttribute("cp");
  
  	UserVo userLogin = (UserVo) session.getAttribute("userLogin");
  
      out.write("\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("  \t.navbar-inverse .navbar-brand,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:focus,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:focus{\r\n");
      out.write("\t\tfont-size: 15px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("  \t.navbar-inverse .navbar-nav > .active > a, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:hover, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:focus {\r\n");
      out.write("  \t  color: white;\r\n");
      out.write("  \t  background-color: #990000;\r\n");
      out.write("\t}\r\n");
      out.write("\t.navbar-header,\r\n");
      out.write("\t.navbar-form{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tpadding-top: 10px;\r\n");
      out.write("\t\tpadding-bottom: 10px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-nav > li > a{\r\n");
      out.write("\t\tpadding-top: 25px;\r\n");
      out.write("\t\tpadding-bottom: 25px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-brand img {\r\n");
      out.write("\t\theight: auto;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav.navbar-nav a strong {\r\n");
      out.write("font-size : 20px;\r\n");
      out.write("line-height:20px;\r\n");
      out.write("vertical-align:bottom;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("  </style>\r\n");
      out.write("<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"/index.jsp\"><img src=\"/commons/img/logo.png\" alt=\"logoImage\" /></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      <li class=\"");
      out.print("eve".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/events.jsp\"><strong>시사</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("eco".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/economy.jsp\"><strong>경제</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("spo".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/sports.jsp\"><strong>스포츠</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("ent".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/entertainment.jsp\"><strong>연예</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("join".equals(cp)?"active":"" );
      out.write("\"><a href=\"/citizenrep/list.jsp\"><strong>참여마당</strong></a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("    ");

    	String url = request.getRequestURI() + (request.getQueryString() == null? "" : ("?" + request.getQueryString()));
    	if(userLogin == null) { 
    
    
      out.write("\r\n");
      out.write("      <li class=\"");
      out.print("add".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/addUser.jsp\"><span class=\"glyphicon glyphicon-user\"></span> 회원가입</a></li>\r\n");
      out.write("      <li class=\"");
      out.print("log".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/userLogin.jsp?returnURL=");
      out.print(url );
      out.write("\"><span class=\"glyphicon glyphicon-log-in\"></span> 로그인</a></li>\r\n");
      out.write("     ");
} else { 
      out.write("\r\n");
      out.write("     \t<li class=\"");
      out.print("fix".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/profileFix.jsp\">프로필 수정</a></li>\r\n");
      out.write("    \t<li><a href=\"/profile/logout.jsp?returnURL=");
      out.print(url );
      out.write("\"><span class=\"glyphicon glyphicon-log-out\">로그아웃</span></a></li>\r\n");
      out.write("     ");
} 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-xs-offset-4 col-xs-4 panel panel-body\">\r\n");
      out.write("                <h1 class=\"text-center\">J Times</h1>\r\n");
      out.write("                \t");

		             	final String FAIL_CODE_DUP_ID = "1";
		            	final String FAIL_CODE_NULL = "2";
		
		             	
		             	String failCode = request.getParameter("fail");
		             
      out.write("\r\n");
      out.write("                \t");
 
						if(request.getParameter("fail") !=null) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"alert alert-danger\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<strong>오류</strong> 아이디 혹은 비밀번호가 올바르지 않습니다.\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("                <form class=\"well\" method=\"post\" action=\"login.jsp\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"returnURL\" value=\"");
      out.print(returnURL);
      out.write("\"/>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label>아이디</label>\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("\t                        <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-user\"></i></span>\r\n");
      out.write("\t                        <input id=\"id\" type=\"text\" class=\"form-control\" name=\"id\" placeholder=\"아이디\"/>\r\n");
      out.write("                    \t</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label>비밀번호</label>\r\n");
      out.write("                        <div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t    <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-lock\"></i></span>\r\n");
      out.write("\t\t\t\t\t\t    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"비밀번호\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <button id=\"login-btn\" class=\"btn btn-lg btn-danger btn-block\" type=\"submit\">로그인</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"text-right\"><a href=\"/profile/addUser.jsp\">회원가입</a> / <a href=\"/profile/findUserId.jsp\">아이디 찾기</a> / <a href=\"/profile/findUserPassword.jsp\">비밀번호 찾기</a></p>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("                \r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
