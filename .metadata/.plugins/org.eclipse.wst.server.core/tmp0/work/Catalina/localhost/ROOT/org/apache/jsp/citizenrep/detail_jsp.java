/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-09-13 05:37:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.citizenrep;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.co.jtimes.citizenrep.util.StringUtils;
import kr.co.jtimes.citizenrep.comments.dao.CrCommentsDao;
import java.util.List;
import kr.co.jtimes.citizenrep.comments.vo.CrCommentsVo;
import kr.co.jtimes.util.DateUtils;
import kr.co.jtimes.profile.common.vo.UserVo;
import kr.co.jtimes.citizenrep.vo.CitizenRepVo;
import kr.co.jtimes.citizenrep.dao.CitizenRepDao;
import kr.co.jtimes.profile.common.vo.UserVo;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/commons/clientNavi.jsp", Long.valueOf(1505274185250L));
    _jspx_dependants.put("/commons/clientFooter.jsp", Long.valueOf(1505205741237L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.co.jtimes.profile.common.vo.UserVo");
    _jspx_imports_classes.add("kr.co.jtimes.citizenrep.dao.CitizenRepDao");
    _jspx_imports_classes.add("kr.co.jtimes.citizenrep.util.StringUtils");
    _jspx_imports_classes.add("kr.co.jtimes.citizenrep.comments.dao.CrCommentsDao");
    _jspx_imports_classes.add("kr.co.jtimes.citizenrep.comments.vo.CrCommentsVo");
    _jspx_imports_classes.add("kr.co.jtimes.util.DateUtils");
    _jspx_imports_classes.add("kr.co.jtimes.citizenrep.vo.CitizenRepVo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>JTimes :: 시민 제보</title>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("\t.container {\r\n");
      out.write("\t\twidth: 1024px;\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

		pageContext.setAttribute("cp", "join");

      out.write('\r');
      out.write('\n');
 
	int no = Integer.parseInt(request.getParameter("bno"));
	int p = StringUtils.strToNumber(request.getParameter("p"), 1);
	CitizenRepDao citizenRepDao = new CitizenRepDao();
	CitizenRepVo citizenRepVo = citizenRepDao.getCitRepByNo(no);
	CrCommentsDao commentsDao = new CrCommentsDao();
	List<CrCommentsVo> comments = commentsDao.getAllCommentByCrNo(no);
	int cnt = citizenRepDao.getTotalRows();

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("  ");

	String cp = (String) pageContext.getAttribute("cp");
  
  	UserVo userLogin = (UserVo) session.getAttribute("userLogin");
  
      out.write("\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("  \t.navbar-inverse .navbar-brand,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:focus,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:focus{\r\n");
      out.write("\t\tfont-size: 15px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("  \t.navbar-inverse .navbar-nav > .active > a, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:hover, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:focus {\r\n");
      out.write("  \t  color: white;\r\n");
      out.write("  \t  background-color: #990000;\r\n");
      out.write("\t}\r\n");
      out.write("\t.navbar-header,\r\n");
      out.write("\t.navbar-form{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tpadding-top: 10px;\r\n");
      out.write("\t\tpadding-bottom: 10px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-nav > li > a{\r\n");
      out.write("\t\tpadding-top: 25px;\r\n");
      out.write("\t\tpadding-bottom: 25px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-brand img {\r\n");
      out.write("\t\theight: auto;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav.navbar-nav a strong {\r\n");
      out.write("font-size : 20px;\r\n");
      out.write("line-height:20px;\r\n");
      out.write("vertical-align:bottom;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("  </style>\r\n");
      out.write("<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"/index.jsp\"><img src=\"/commons/img/logo.png\" alt=\"logoImage\" /></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      <li class=\"");
      out.print("eve".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/events.jsp\"><strong>시사</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("eco".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/economy.jsp\"><strong>경제</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("spo".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/sports.jsp\"><strong>스포츠</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("ent".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/entertainment.jsp\"><strong>연예</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("join".equals(cp)?"active":"" );
      out.write("\"><a href=\"/citizenrep/list.jsp\"><strong>참여마당</strong></a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("    ");

    	String url = request.getRequestURI() + (request.getQueryString() == null? "" : ("?" + request.getQueryString()));
    	if(userLogin == null) { 
    
    
      out.write("\r\n");
      out.write("      <li class=\"");
      out.print("add".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/addUser.jsp\"><span class=\"glyphicon glyphicon-user\"></span> 회원가입</a></li>\r\n");
      out.write("      <li class=\"");
      out.print("log".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/userLogin.jsp?returnURL=");
      out.print(url );
      out.write("\"><span class=\"glyphicon glyphicon-log-in\"></span> 로그인</a></li>\r\n");
      out.write("     ");
} else { 
      out.write("\r\n");
      out.write("     \t<li class=\"");
      out.print("fix".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/profileFix.jsp\">프로필 수정</a></li>\r\n");
      out.write("    \t<li><a href=\"/profile/logout.jsp?returnURL=");
      out.print(url );
      out.write("\"><span class=\"glyphicon glyphicon-log-out\">로그아웃</span></a></li>\r\n");
      out.write("     ");
} 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<h2 class=\"well\">참여마당<small> - 구독자가 만드는 기사</small></h2>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t\t<col width=\"20%\">\r\n");
      out.write("\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t\t<col width=\"20%\">\r\n");
      out.write("\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t\t<col width=\"15%\">\r\n");
      out.write("\t\t\t</colgroup>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"5\">");
      out.print(citizenRepVo.getCitizenRepTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(citizenRepVo.getWriter().getId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(DateUtils.yyyymmddhhmmss(citizenRepVo.getCitizenRepCreateDate()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(citizenRepVo.getCitizenRepContents() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"c-cnt\" value=\"");
      out.print(cnt );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<div class=\"panel-footer text-right\">\r\n");
      out.write("\t\t");

			UserVo userVo = (UserVo) session.getAttribute("userLogin");
			if(userLogin != null){
				if(citizenRepVo.getWriter().getNo() == userVo.getNo()){
		
      out.write("\r\n");
      out.write("\t\t\t<a href=\"editorForm.jsp?bno=");
      out.print(no );
      out.write("\" class=\"btn btn-warning btn-sm\">수정</a>\r\n");
      out.write("\t\t\t<a href=\"delete.jsp?bno=");
      out.print(no );
      out.write("\" class=\"btn btn-danger btn-sm\">삭제</a>\r\n");
      out.write("\t\t");
}else if(userVo.getNo() == 0){
      out.write("\r\n");
      out.write("\t\t\t<a href=\"delete.jsp?bno=");
      out.print(no );
      out.write("\" class=\"btn btn-danger btn-sm\">삭제</a>\r\n");
      out.write("\t\t");
 }}
      out.write("\r\n");
      out.write("\t\t\t<a href=\"list.jsp?p=");
      out.print(p );
      out.write("\" class=\"btn btn-primary btn-sm\">목록</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
if(userLogin != null){ 
      out.write("\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<form class=\"form-horizontal\" method=\"post\" action=\"addComment.jsp\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cireno\" value=\"");
      out.print(citizenRepVo.getCitizenRepNo() );
      out.write("\">\r\n");
      out.write("\t\t\t<div class=\"form=group\">\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-offset-1 col-xs-9\">\r\n");
      out.write("\t\t\t\t\t<textarea rows=\"1\" class=\"form-control\" name=\"cmt-contents\" onclick=\"this.value=''\">댓글을 입력하세요</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"com-xs-2\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-default\">등록</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t");
if(comments != null){ 
      out.write("\r\n");
      out.write("\t<div class=\"row col-xs-offset-1 col-xs-10 well\">\r\n");
      out.write("\t\t");

			for( CrCommentsVo comment : comments){
		
      out.write("\r\n");
      out.write("\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t<p>작성자 : ");
      out.print(comment.getUserVo().getId() );
      out.write(" <small class=\"pull-right\">작성일 : ");
      out.print(DateUtils.yyyymmddhhmmss(comment.getRegDate()) );
      out.write("</small></p>\r\n");
      out.write("\t\t\t\t<p>");
      out.print(comment.getContents() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t");

					if(userLogin != null){
						if(comment.getUserVo().getNo() == userVo.getNo() || userVo.getNo() == 0) {
      out.write("\r\n");
      out.write("\t\t\t\t<p class=\"text-right\"><a href=\"deleteComment.jsp?bno=");
      out.print(no );
      out.write("&cmtno=");
      out.print(comment.getNo() );
      out.write("\" class=\"btn btn-xs btn-danger pull-right\">삭제</a></p>\r\n");
      out.write("\t\t\t\t");
}} 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<footer class=\"bd-footer text-muted\" style=\"bottom:0; width:100%; height:70px;\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row col-xs-3\">\r\n");
      out.write("\t\t\t\t<h2>J Times</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row col-xs-9\">\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("    \t\t\t\t<p>Copyright ⓒ All rights reserved <span class=\"glyphicon glyphicon-phone-alt\" aria-hidden=\"true\">010)1111-1111</span></p>\r\n");
      out.write("    \t\t\t\t<p>주소: 서울특별시 종로구 율곡로10길 105 디아망 401호(봉익동 10-1 디아망 401호) 등록일자: 20XX.XX.XX 발행인/편집인: 김형택</p>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t| <label><a href=\"/index.jsp\">메인</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/events.jsp\">시사</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/economy.jsp\">경제</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/entertainment.jsp\">연예</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/sports.jsp\">스포츠</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/citizenrep/list.jsp\">기사제보(참여마당)</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/sitemap.jsp\">전체서비스</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"\">맨위로</a></label> |\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\t\t\r\n");
      out.write("\t</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
