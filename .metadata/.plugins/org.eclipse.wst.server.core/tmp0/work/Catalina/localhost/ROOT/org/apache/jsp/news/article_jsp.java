/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-09-12 05:18:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.news;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.co.jtimes.news.comment.vo.CommentLikeVo;
import kr.co.jtimes.news.comment.Dao.CommentLikeDao;
import com.google.gson.Gson;
import java.io.PrintWriter;
import kr.co.jtimes.news.vo.TbSuggestVo;
import kr.co.jtimes.news.dao.TbSuggestDao;
import kr.co.jtimes.news.comment.vo.NewCommentVo;
import java.util.List;
import kr.co.jtimes.news.comment.Dao.CommentDao;
import kr.co.jtimes.news.vo.TbNewsVo;
import kr.co.jtimes.news.dao.TbNewsDao;
import kr.co.jtimes.profile.common.vo.UserVo;

public final class article_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/commons/clientNavi.jsp", Long.valueOf(1505179754791L));
    _jspx_dependants.put("/commons/clientFooter.jsp", Long.valueOf(1505184570562L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("kr.co.jtimes.news.comment.vo.NewCommentVo");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.google.gson.Gson");
    _jspx_imports_classes.add("kr.co.jtimes.profile.common.vo.UserVo");
    _jspx_imports_classes.add("kr.co.jtimes.news.comment.vo.CommentLikeVo");
    _jspx_imports_classes.add("kr.co.jtimes.news.comment.Dao.CommentDao");
    _jspx_imports_classes.add("kr.co.jtimes.news.dao.TbNewsDao");
    _jspx_imports_classes.add("kr.co.jtimes.news.comment.Dao.CommentLikeDao");
    _jspx_imports_classes.add("kr.co.jtimes.news.vo.TbNewsVo");
    _jspx_imports_classes.add("kr.co.jtimes.news.vo.TbSuggestVo");
    _jspx_imports_classes.add("kr.co.jtimes.news.dao.TbSuggestDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Bootstrap Example</title>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("  \t#write-date, #reporter-name, #one-line {color: darkgray;}\r\n");
      out.write("  \t.container {\r\n");
      out.write("\t\twidth: 1024px;\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("  </style>\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  \r\n");
      out.write("\t// 댓글 좋아요 기능\r\n");
      out.write("\t\r\n");
      out.write("\tfunction commentLike(commentNo, commentUploaderNo, loginUserNo) {\r\n");
      out.write("\t\tif(commentUploaderNo == loginUserNo) {\r\n");
      out.write("\t\t\talert('본인이 쓴 글입니다');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhr = new XMLHttpRequest();\r\n");
      out.write("\t\txhr.onreadystatechange = function () {\r\n");
      out.write("\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\r\n");
      out.write("\t\t\t\tvar likes = xhr.responseText\r\n");
      out.write("\t\t\t\tif(likes == \"samesame\") {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추천하셨습니다.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"comment-no-\"+commentNo).innerHTML = likes;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\txhr.open(\"GET\", \"/news/commentLike.jsp?commentNo=\"+commentNo+\"&pref=Y\");\r\n");
      out.write("\t\txhr.send(null);\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t// 댓글 싫어요 기능\r\n");
      out.write("\t\r\n");
      out.write("\tfunction commentDislike(commentNo, commentUploaderNo, loginUserNo) {\r\n");
      out.write("\t\tif(commentUploaderNo === loginUserNo) {\r\n");
      out.write("\t\t\talert('본인이 쓴 글입니다.');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar xhr = new XMLHttpRequest();\r\n");
      out.write("\t\txhr.onreadystatechange = function () {\r\n");
      out.write("\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\r\n");
      out.write("\t\t\t\tvar disLikes = xhr.responseText\r\n");
      out.write("\t\t\t\tif(disLikes == \"samesame\") {\r\n");
      out.write("\t\t\t\t\talert(\"이미 추천하셨습니다.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"dis-comment-no-\"+commentNo).innerHTML = disLikes;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\txhr.open(\"GET\", \"/news/commentLike.jsp?commentNo=\"+commentNo+\"&pref=N\");\r\n");
      out.write("\t\txhr.send(null);\r\n");
      out.write("\t};\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	int no = Integer.parseInt(request.getParameter("newsNo"));
	pageContext.setAttribute("url",  request.getRequestURI() + "?" + request.getQueryString());

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  ");

	String cp = (String) pageContext.getAttribute("cp");
  
  	UserVo userLogin = (UserVo) session.getAttribute("userLogin");
  
      out.write("\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("  \t.navbar-inverse .navbar-brand,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-brand:focus,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:hover,\r\n");
      out.write("\t.navbar-inverse .navbar-nav > li > a:focus{\r\n");
      out.write("\t\tfont-size: 15px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("  \t.navbar-inverse .navbar-nav > .active > a, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:hover, \r\n");
      out.write("\t.navbar-inverse .navbar-nav > .active > a:focus {\r\n");
      out.write("  \t  color: white;\r\n");
      out.write("  \t  background-color: #990000;\r\n");
      out.write("\t}\r\n");
      out.write("\t.navbar-header,\r\n");
      out.write("\t.navbar-form{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tpadding-top: 10px;\r\n");
      out.write("\t\tpadding-bottom: 10px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-nav > li > a{\r\n");
      out.write("\t\tpadding-top: 25px;\r\n");
      out.write("\t\tpadding-bottom: 25px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.navbar-brand img {\r\n");
      out.write("\t\theight: auto;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav.navbar-nav a strong {\r\n");
      out.write("font-size : 20px;\r\n");
      out.write("line-height:20px;\r\n");
      out.write("vertical-align:bottom;\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("  </style>\r\n");
      out.write("<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"/index.jsp\"><img src=\"/commons/img/logo.png\" alt=\"logoImage\" /></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      <li class=\"");
      out.print("eve".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/events.jsp\"><strong>시사</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("eco".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/economy.jsp\"><strong>경제</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("spo".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/sports.jsp\"><strong>스포츠</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("ent".equals(cp)?"active":"" );
      out.write("\"><a href=\"/news/entertainment.jsp\"><strong>연예</strong></a></li>\r\n");
      out.write("      <li class=\"");
      out.print("join".equals(cp)?"active":"" );
      out.write("\"><a href=\"/citizenrep/list.jsp\"><strong>참여마당</strong></a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("    ");
if(userLogin == null) { 
      out.write("\r\n");
      out.write("      <li class=\"");
      out.print("add".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/addUser.jsp\"><span class=\"glyphicon glyphicon-user\"></span> 회원가입</a></li>\r\n");
      out.write("      <li class=\"");
      out.print("log".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/userLogin.jsp?returnURL=");
      out.print(pageContext.getAttribute("url") );
      out.write("\"><span class=\"glyphicon glyphicon-log-in\"></span> 로그인</a></li>\r\n");
      out.write("     ");
} else { 
      out.write("\r\n");
      out.write("     \t<li class=\"");
      out.print("fix".equals(cp)?"active":"" );
      out.write("\"><a href=\"/profile/profileFix.jsp\">프로필 수정</a></li>\r\n");
      out.write("    \t<li><a href=\"/profile/logout.jsp?returnURL=");
      out.print(pageContext.getAttribute("url") );
      out.write("\"><span class=\"glyphicon glyphicon-log-out\">로그아웃</span></a></li>\r\n");
      out.write("     ");
} 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\r\n");


	UserVo loginUser = (UserVo) session.getAttribute("userLogin");
	
	TbNewsDao tbNewsDao = new TbNewsDao();
	TbNewsVo tbNewsVo = tbNewsDao.getNews(no);
	
	System.out.println(tbNewsVo.getNewsTitle());
	
	
	CommentDao commentDao = new CommentDao();
	List<NewCommentVo> commentList = commentDao.getCommentByNewsNo(no);
	
	UserVo user = new UserVo();
	user.setNo(no);
	
	TbSuggestDao suggestDao = new TbSuggestDao();
	TbSuggestVo suggest = new TbSuggestVo();
	
	CommentLikeDao commentLikeDao = new CommentLikeDao();
	

      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<div class=\" col-xs-offset-1 col-xs-10\">\r\n");
      out.write("\t\t<div class=\"row text-center\">\r\n");
      out.write("\t\t\t<div class=\"panel panel-body\">\r\n");
      out.write("\t\t\t\t<h1><strong>");
      out.print(tbNewsVo.getNewsTitle() );
      out.write("</strong></h1>\r\n");
      out.write("\t\t\t\t<div class=\"text-right\">\r\n");
      out.write("\t\t\t\t\t<span id=\"write-date\"><small>");
      out.print(tbNewsVo.getRegdateFormatYYMMDDHHMMSS() );
      out.write("</small></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row text-right\">\r\n");
      out.write("\t\t\t<span><small>조회수:");
      out.print(tbNewsVo.getNewsViewCnt() );
      out.write("</small></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row text-right\" id=\"count\">\t\r\n");
      out.write("\t\t\t<span><small>추천수:");
      out.print(suggestDao.getSuggests(no) );
      out.write("</small></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"panel panel-body\">\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<p>");
      out.print(tbNewsVo.getNewsContents() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"form-group text-center\">\r\n");
      out.write("\t\t\t");

				if (loginUser != null) {
			
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"javascript:likeup(");
      out.print(no );
      out.write(")\" class=\"btn btn-default\" id=\"add-like\">추천</a>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row well\">\r\n");
      out.write("\t\t\t<form class=\"form-group\" id=\"frm\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"newsNo\" value=\"");
      out.print(tbNewsVo.getNewsNo());
      out.write("\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<textarea rows=\"3\" cols=\"100\" class=\"form-control\" name=\"contents\" id=\"contents\"></textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
if(loginUser != null) {
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group text-right\">\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-sm btn-primary\" id=\"comment-register\">등록</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t<ul class=\"list-group\" id=\"comment\">\r\n");
      out.write("\t\t\t\t");

						for (NewCommentVo comments : commentList) {
							boolean isClick = true;
							if (loginUser == null) {
								isClick = false;
							}
							if (loginUser != null && loginUser.getId().equals(comments.getUserVo().getId())) {
								isClick = false;
							}
				
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"list-group-item\">\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"comment-id\">");
      out.print(comments.getUserVo().getId() );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"pull-right\" id=\"comment-date\">입력일시: ");
      out.print(comments.getRegdateFormatYYMMDDHHMMSS() );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"list-group-item-text\">");
      out.print(comments.getCommentContents() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"text-right\" id=\"comment-like\">\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t");
if (isClick) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<a  href=\"javascript:commentLike(");
      out.print(comments.getCommentNo());
      out.write(',');
      out.write(' ');
      out.print(comments.getUserVo().getNo() );
      out.write(',');
      out.write(' ');
      out.print(loginUser.getNo() );
      out.write(")\" class=\"btn btn-sm\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-thumbs-up\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"comment-no-");
      out.print(comments.getCommentNo());
      out.write("\" class=\"badge\">");
      out.print(commentLikeDao.getCommentLikeByCommentNo(comments.getCommentNo(), "Y") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<a  href=\"javascript:commentDislike(");
      out.print(comments.getCommentNo());
      out.write(',');
      out.write(' ');
      out.print(comments.getUserVo().getNo() );
      out.write(',');
      out.write(' ');
      out.print(loginUser.getNo() );
      out.write(")\" class=\"btn btn-sm\" style=\"color: red;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-thumbs-down\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</a> \r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"dis-comment-no-");
      out.print(comments.getCommentNo());
      out.write("\" class=\"badge\">");
      out.print(commentLikeDao.getCommentLikeByCommentNo(comments.getCommentNo(), "N") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t");

						} else {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-thumbs-up\" style=\"color: cornflowerblue;\"></span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"comment-no-");
      out.print(comments.getCommentNo());
      out.write("\" class=\"badge\">");
      out.print(commentLikeDao.getCommentLikeByCommentNo(comments.getCommentNo(), "Y") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-thumbs-down\" style=\"color: red;\"></span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"dis-comment-no-");
      out.print(comments.getCommentNo());
      out.write("\" class=\"badge\">");
      out.print(commentLikeDao.getCommentLikeByCommentNo(comments.getCommentNo(), "N") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t");

						}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<footer class=\"bd-footer text-muted\" style=\"bottom:0; width:100%; height:70px;\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row col-xs-3\">\r\n");
      out.write("\t\t\t\t<h2>J Times</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row col-xs-9\">\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("    \t\t\t\t<p>Copyright ⓒ All rights reserved <span class=\"glyphicon glyphicon-phone-alt\" aria-hidden=\"true\">010)1111-1111</span></p>\r\n");
      out.write("    \t\t\t\t<p>주소: 서울특별시 종로구 율곡로10길 105 디아망 401호(봉익동 10-1 디아망 401호) 등록일자: 20XX.XX.XX 발행인/편집인: 김형택</p>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t| <label><a href=\"/index.jsp\">메인</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/events.jsp\">시사</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/economy.jsp\">경제</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/entertainment.jsp\">연예</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/news/sports.jsp\">스포츠</a></label> | \r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t\t| <label><a href=\"/citizenrep/list.jsp\">기사제보(참여마당)</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"/sitemap.jsp\">전체서비스</a></label> | \r\n");
      out.write("    \t\t\t\t<label><a href=\"\">맨위로</a></label> |\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\t\t\r\n");
      out.write("\t</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t// 댓글 추가 및 디스플레이 기능\r\n");
      out.write("\tdocument.getElementById(\"frm\").addEventListener(\"submit\", function(event) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tevent.preventDefault();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhr = new XMLHttpRequest();\r\n");
      out.write("\t\txhr.onreadystatechange = function() {\r\n");
      out.write("\t\t\tif(xhr.readyState ==4 && xhr.status == 200) {\r\n");
      out.write("\t\t\t\tvar commentList = JSON.parse(xhr.responseText);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar htmlContent = \"\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tcommentList.forEach(function(comment, index){\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\thtmlContent += '<li class=\"list-group-item\">';\r\n");
      out.write("\t\t\t\t\thtmlContent += '<div id=\"comment\">';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t<p>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<span\">'+comment.userVo.id+'</span>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<span class=\"pull-right\">입력일시:'+comment.regdate+'</span>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t</p>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t<p class=\"list-group-item-text\">'+comment.commentContents+'</p>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '</div>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '<div class=\"text-right\" id=\"comment-like\">';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t<p>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<a class=\"glyphicon glyphicon-thumbs-up\" onclick=\"javascript:commentLike()\" class=\"btn btn-sm\"></a> ';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<span id=\"comment-no-'+comment.commentNo+' class=\"badge\">'+commentLikeDao.CommentLikeByCommentNo(comments.commentNo, \"Y\")+'</span>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<a class=\"glyphicon glyphicon-thumbs-down\" onclick=\"javascript:commentLike()\" class=\"btn btn-sm\" style=\"color: red;\"></a> ';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t\t<span id=\"dis-comment-no-'+comment.commentNo+' class=\"badge\">'+commentLikeDao.CommentLikeByCommentNo(comments.commentNo, \"N\")+'</span>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '\t</p>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '</div>';\r\n");
      out.write("\t\t\t\t\thtmlContent += '</li>';\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"comment\").innerHTML = htmlContent;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txhr.open(\"POST\", \"/news/addComment.jsp\");\r\n");
      out.write("\t\txhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\txhr.send(\"contents=\"+document.getElementById(\"contents\").value+\"&no=\" + ");
      out.print(no );
      out.write(");\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t// 추천수 띄우는 기능\r\n");
      out.write("\r\n");
      out.write("\tfunction likeup(pageNo) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar xhr = new XMLHttpRequest();\r\n");
      out.write("\t\txhr.onreadystatechange = function () {\r\n");
      out.write("\t\t\tif (xhr.readyState == 4 && xhr.status == 200) {\r\n");
      out.write("\t\t\t\tvar likes = xhr.responseText\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar htmlContent = \"\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\thtmlContent +='<span><small>추천수:'+likes+'</small></span>'\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"count\").innerHTML = htmlContent;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"add-like\").setAttribute(\"class\", \"btn btn-danger\");\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"add-like\").innerText = \"이미 추천하셨습니다.\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"add-like\").setAttribute(\"disabled\", \"disabled\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\txhr.open(\"GET\", \"/news/newsLike.jsp?newsNo=\"+pageNo);\r\n");
      out.write("\t\txhr.send(null);\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
